
4.6 并行计算模型
4.6.1 PRAM 模型
RAM模型（random access machine），由单处理器+memory组成，每个时间步，处理器执行串行程序中的的一条指令；忽略cache、memory size复杂的地址访问模式等细节；RAM模型一般用于近似的运行性能分析；
PRAM模型（parallel random access machine）：
    由P个相同处理器组成，每个处理器都是一个RAM；
    每个处理器可以访问同一个common memory；memory访问可能发生冲突，基于不同的冲突模型，有不同的数据依赖限制；
    算法的cost由并行处理的"时间步"组成（每个时间步有 读+算+写构成）
    PRAM模型的缺点主要在于一些不合适的假设：
      a, 真实的并行处理器无法保证访存总是在单位时间内完成；
      b, 真实的并行处理器往往有cache等memory层级，带来更多的处理时间的不确定性；
      c, 多处理器访问memory时，即使不访问相同的读写地址，也存在竞争或者仲裁的情况，带来访存代价上的差异；
    因此有一些PRAM的变种分别解决以上三个问题。

4.6.1 BSP 模型
  BSP （bulk synchoronously parallel）模型，旨在建立一个软件和硬件在并行计算领域的中间表达，将软件的开发同实际的硬件架构解耦开；
  BSP 模型的构成为：
    a, 若干处理器，各自拥有独立的memory空间；
    b, 处理器之间的通信不是“单独的点对点的传输”组成；
    c, BPS处理在时间上由 supersteps 组成，在每个supersteps内部，处理器完成：
      i, 
  
